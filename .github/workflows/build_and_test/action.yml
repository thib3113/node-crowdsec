name: 'Build and Test'
description: 'Build and test a package'
inputs:
  node-version:
    description: 'The version of node to use'
    required: true
  package_path:
    description: 'The current package path'
    required: true
  package_name:
    description: 'The current package name'
    required: true
  check:
    description: 'check the package'
    required: false
    default: "false"
  CODECOV_TOKEN:
    description: 'CODECOV_TOKEN'
    required: true
  GITHUB_TOKEN:
    description: 'GITHUB_TOKEN'
    required: true
  SONAR_TOKEN:
    description: 'SONAR_TOKEN'
    required: true

on:

runs:
  using: "composite"
  steps:
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        run_install: true
        version: latest

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install
      shell: bash

    - name: run eslint
      run: npm run ci:eslint
      working-directory: ${{ inputs.package_path }}
      continue-on-error: true
      shell: bash
      env:
        CI: true
      if: ${{ inputs.check == 'true' }}

    - name: build dependencies
      run:  pnpm -F ./... build -r
      working-directory: ${{ inputs.package_path }}
      shell: bash

    - uses: mattallty/jest-github-action@v1.0.3
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        CI: true
      with:
        working-directory: ${{ inputs.package_path }}
        test-command: npm run test:ci:coverage
        coverage-comment: false

    - name: Test build
      run: pnpm -F ${{ inputs.package_name }}... build
      shell: bash

    - name: replace path in coverage files
      working-directory: ${{ inputs.package_path }}
      shell: bash
      run: |
        find ./coverage -type f -exec sed -i -e "s@$(pwd)@.@g" {} \;
      if: ${{ inputs.check == 'true' }}

    - uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: |
          ${{ inputs.package_path }}/coverage/clover.xml
          ${{ inputs.package_path }}/coverage/coverage-final.json
          ${{ inputs.package_path }}/coverage/lcov.info
          ${{ inputs.package_path }}/coverage/junit.xml
          ${{ inputs.package_path }}/coverage/test-report.xml
          ${{ inputs.package_path }}/coverage/eslint-report.json
      if: ${{ inputs.check == 'true' }}


    - uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.CODECOV_TOKEN }}
        name: ${{ inputs.package_name }}
        verbose: true
        directory: ${{ inputs.package_path }}/coverage
      if: ${{ inputs.check == 'true' }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
      with:
        projectBaseDir: ${{ inputs.package_path }}
      if: ${{ inputs.check == 'true' }}
